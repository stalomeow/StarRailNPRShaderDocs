{"config":{"lang":["zh","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"StarRail NPR Shader Docs","text":"<p>May this journey lead us starward</p> <p>Fan-made shaders for Unity URP attempting to replicate the shading of Honkai: Star Rail. </p>"},{"location":"#Core-Features","title":"Core Features","text":"<ul> <li>Supports both ripped model and MMD model.</li> <li>Supports Forward and Forward+ rendering paths.</li> <li>Supports transparent front hair.</li> <li>Supports self shadow and per-object shadow, up to 16 on the same screen.</li> <li>Custom Bloom and Tonemapping.</li> <li>Custom material editor.</li> <li>Automated workflow (smoothing normals, setting up textures, generating materials, building), integrated with Unity Preset system.</li> <li>Verified on Windows and Android.</li> </ul>"},{"location":"#Sponsor","title":"Sponsor","text":"<p>If you like this project, you can sponsor Firefly  with an Oak Cake Rolls, chirp! Link: https://stalomeow.com/#coffee.</p>"},{"location":"#Special-Thanks","title":"Special Thanks","text":"<ul> <li>miHoYo / HoYoverse</li> <li>Razmoth</li> <li>m4urlcl0</li> <li>\u00b0Nya\u00b0222</li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#Requirements","title":"Requirements","text":"<ul> <li>Unity &gt;= 2022.3.20</li> <li>Core RP Library &gt;= 14.0.10</li> <li>Universal RP &gt;= 14.0.10</li> </ul> <p>Since the API frequently changes, it is recommended not to use a version that is too high. If any error occurs after installation, the version is inappropriate.</p>"},{"location":"installation/#Install-via-git-URL","title":"Install via git URL","text":"<ol> <li> <p>Select <code>Add package from git URL...</code> from the add menu of Package Manager.</p> <p>Install</p> </li> <li> <p>Enter the following in the text box:</p> <pre><code>https://github.com/stalomeow/StarRailNPRShader.git\n</code></pre> </li> <li> <p>Select <code>Add</code>.</p> </li> </ol>"},{"location":"installation/#Render-Pipeline-Settings","title":"Render Pipeline Settings","text":"<ul> <li> <p>Add <code>Honkai Star Rail</code> Renderer Feature to the Universal Renderer. It has built-in screen space shadows, so remove the <code>ScreenSpaceShadows</code> Renderer Feature of URP.</p> <p>Renderer Feature</p> </li> <li> <p>Use Linear Color Space.</p> <p>Linear Color Space</p> </li> <li> <p>Use Forward or Forward+ Rendering Path and disable Depth Priming.</p> <p>Rendering Path</p> </li> <li> <p>It is recommended to enable HDR.</p> <p>HDR</p> </li> </ul>"},{"location":"installation/#Post-processing-Settings","title":"Post-processing Settings","text":"<p>Post-processing is important; be sure to add it.</p> <p>Post-processing Settings</p>"},{"location":"advanced/rendering-flowchart/","title":"Rendering Flowchart","text":"<pre><code>flowchart TD\n    URPShadowCaster[URP ShadowCaster] --&gt; StarRail1\n\n    subgraph StarRail1[Honkai Star Rail]\n        PerObjShadowCaster([MainLight Per-Object ShadowCaster])\n    end\n\n    StarRail1 --&gt; URPDepthPrepass[URP DepthPrepass]\n    URPDepthPrepass --&gt; StarRail2\n\n    subgraph StarRail2[Honkai Star Rail]\n        HairDepthPrepass([Hair DepthPrepass]) --&gt; EnableScreenSpaceShadow([Enable ScreenSpaceShadow])\n    end\n\n    StarRail2 --&gt; URPOpaque[URP Opaque]\n    URPOpaque --&gt; StarRail3\n\n    subgraph StarRail3[Honkai Star Rail]\n        DisableScreenSpaceShadow([Disable ScreenSpaceShadow]) --&gt; SROpaque([Opaque &amp; Outline])\n    end\n\n    StarRail3 --&gt; URPSkyboxTrans[URP Skybox &amp; Transparent]\n    URPSkyboxTrans --&gt; StarRail4\n\n    subgraph StarRail4[Honkai Star Rail]\n        SRTransparent([Transparent &amp; Outline]) --&gt; SRPost([Bloom &amp; Tonemapping])\n    end\n\n    StarRail4 --&gt; URPPost[URP PostProcess]</code></pre> <p>Transparent objects using normal URP Shader and transparent objects on characters are divided into two groups for rendering, which may cause problems.</p>"},{"location":"advanced/sampling-character-shadow/","title":"Sampling Character Shadow","text":""},{"location":"advanced/sampling-character-shadow/#Using-Screen-Space-Shadow","title":"Using Screen Space Shadow","text":"<p>The per-object shadow of characters and Unity's built-in shadow will be combined into a single screen space shadow map.</p> <p>According to the previous rendering flowchart, if your material is rendered in the <code>URP Opaque</code> pass, you only need to add the <code>_MAIN_LIGHT_SHADOWS_SCREEN</code> keyword to it. Then, you can sample the main light shadow using URP's default method.</p>"},{"location":"advanced/sampling-character-shadow/#Manual-Sampling","title":"Manual Sampling","text":"<p>For materials rendered in other passes and transparent materials that do not support screen space shadow, you can manually sample character shadow.</p> <p>Enable soft shadow.</p> <pre><code>#pragma multi_compile_fragment _ _SHADOWS_SOFT\n</code></pre> <p>Include the file.</p> <pre><code>#include \"Packages/com.stalomeow.star-rail-npr-shader/Shaders/Shadow/PerObjectShadow.hlsl\"\n</code></pre> <p>Sample all character shadow using world space position.</p> <pre><code>float shadow = MainLightPerObjectSceneShadow(positionWS);\n</code></pre>"},{"location":"advanced/stencil-value/","title":"Stencil Value","text":"<p>This project uses the lower 3 bits.</p> Stencil Value Description <code>0b_0000_0001</code> Character <code>0b_0000_0010</code> Eye <code>0b_0000_0100</code> Transparent Object <p>These values are used in combination. For example, the eyes of a character correspond to <code>0b_0000_0011</code>.</p>"},{"location":"character/asset/","title":"Asset","text":""},{"location":"character/asset/#Obtaining-Assets","title":"Obtaining Assets","text":"<p>Using this Shader requires a lot of ripped assets, which you need to obtain yourself. This project does not provide assets, tools, or tutorials to help you obtain assets.</p>"},{"location":"character/asset/#Model-Size","title":"Model Size","text":"<p>Models must be imported at the correct size to ensure proper rendering.</p> Ripped ModelsMMD Models <p>When the model is imported into Unity, set the <code>Scale Factor</code> to <code>1</code> and uncheck <code>Convert Units</code>. (1)</p> <ol> <li> <p>Using AssetStudio as an example. It exports models using the FBX SDK. In the code, the <code>scaleFactor</code> is used to set the units, with the default being <code>1cm</code>.</p> <pre><code>FbxGlobalSettings&amp; globalSettings = pScene-&gt;GetGlobalSettings();\nglobalSettings.SetSystemUnit(FbxSystemUnit(scaleFactor));\n</code></pre> <p>The unit for StarRail character models is <code>1m</code>. Therefore, before exporting the model, you need to change the <code>ScaleFactor</code> to <code>100</code> in the export options. However, some people may not change this value or give an arbitrary value, leading to incorrect FBX units.</p> <p>FBX Scale Factor</p> </li> </ol> <p>Model Size Settings</p> <p>The official MMD models are in PMX format, which Unity does not support. You need to use other tools to export the models to FBX. Below is an example using Blender and blender_mmd_tools.</p> <p>MMD models use a unit of <code>0.08m</code>, while Blender's default unit is <code>1m</code>. Therefore, set the <code>Scale</code> to <code>0.08</code> when importing into Blender.</p> <p>Blender Import Settings</p> <p>When exporting to FBX, change <code>Apply Scalings</code> to <code>FBX Units Scale</code> to apply the scaling to the FBX model units.</p> <p>Blender Export Settings</p> <p>After the model is imported into Unity, no further changes are needed.</p> <p>Model Size Settings</p>"},{"location":"character/asset/#Processing-Assets","title":"Processing Assets","text":"<p>Textures and models of characters need to be set up correctly before they can be used. This is a repetitive and tedious task, so this project provides an asset processor. After importing an asset, if its path meets certain requirements, the asset processor will automatically apply presets to it without the need for manual modification of the asset settings. For models, it can also automatically smooth their normals.</p> <p>Default texture filename formats:</p> <ul> <li><code>Avatar_*_Ramp*</code></li> <li><code>Avatar_*_LightMap*</code></li> <li><code>Avatar_*_Color*</code></li> <li><code>Avatar_*_Stockings*</code></li> <li><code>M_*_*_FaceMap*</code> or <code>W_*_*_FaceMap*</code></li> <li><code>M_*_*_Face_ExpressionMap*</code> or <code>W_*_*_Face_ExpressionMap*</code></li> </ul> <p>Default model filename formats:</p> <ul> <li><code>Avatar_*_*.fbx</code> or <code>Art_*_*.fbx</code></li> </ul> <p>By default, case is ignored. <code>*</code> represents zero or more characters.</p> Configure Asset Processor <p>The asset processor can be configured in <code>Project Settings/StarRail NPR Shader/HSR Asset Processors</code>.</p> <p>Asset Processor</p> <ul> <li> <p><code>Match Mode</code>: The matching mode for assets.</p> <ul> <li> <p><code>Name Glob</code>: <code>Path Pattern</code> uses a syntax similar to Unix Glob, ignoring case, to match the asset's name (including the extension).</p> <ul> <li><code>*</code>: Matches zero or more characters.</li> <li><code>?</code>: Matches exactly one character.</li> <li><code>|</code>: Separates multiple Globs. For example, <code>a.* | b.*</code> means matching either <code>a.*</code> or <code>b.*</code>.</li> </ul> </li> <li> <p><code>Regex</code>: Treats <code>Path Pattern</code> as a regular expression to match the complete asset path.</p> </li> <li><code>Equals</code>: Matches successfully if the complete asset path is equal to <code>Path Pattern</code>.</li> <li><code>Contains</code>: Matches successfully if the complete asset path contains <code>Path Pattern</code>.</li> <li><code>Starts With</code>: Matches successfully if the complete asset path starts with <code>Path Pattern</code>.</li> <li><code>Ends With</code>: Matches successfully if the complete asset path ends with <code>Path Pattern</code>.</li> </ul> </li> <li> <p><code>Path Pattern</code>: The pattern string.</p> </li> <li><code>Ignore Case</code>: Whether to ignore case during matching.</li> <li><code>Custom Preset</code>: Custom preset. If empty, the default preset is used.</li> <li><code>Smooth Normal Store Mode</code>: The mode for storing smoothed normals in models.</li> </ul>"},{"location":"character/material/","title":"Material","text":""},{"location":"character/material/#Shaders","title":"Shaders","text":"<ul> <li>Honkai Star Rail/Character/Body</li> <li>Honkai Star Rail/Character/Body (Transparent)</li> <li>Honkai Star Rail/Character/EyeShadow</li> <li>Honkai Star Rail/Character/Face</li> <li>Honkai Star Rail/Character/FaceMask</li> <li>Honkai Star Rail/Character/Hair</li> </ul>"},{"location":"character/material/#Tips","title":"Tips","text":"<ul> <li>It is recommended to reset the material after changing its shader.</li> <li>If using MMD models, set <code>Model Type</code> to <code>MMD</code> at the top of the material. MMD models lack some detailed information, so the rendering may not be as good as ripped models.</li> <li>If the outline flickers or obscures the model, adjust the <code>Z Offset</code> value in the material's <code>Outline</code> section. Typically, this is a small negative number like <code>-1e-05</code> or <code>-1e-04</code>.</li> <li>If self shadow produces strange patterns (Shadow Acne), adjust the <code>Depth Bias</code> and <code>Normal Bias</code> in the material's <code>Self Shadow Caster</code> section. Typically, this is a negative number of the same order of magnitude as <code>-0.01</code>.</li> </ul>"},{"location":"character/material/#Auto-Generate-Materials","title":"Auto-Generate Materials","text":"<p>Prerequisites</p> <p>You need the ability to export in-game materials as JSON files. These files will be referred to as <code>material.json</code> from here on.</p> <p>This project provides a tool for automatically generating or overwriting a Material based on the <code>material.json</code> file.</p> <p>Generate Material Automatically</p> <p>The results generated by this tool are for reference only. Some detailed properties, such as <code>BackFaceUseUV2</code>, etc., still need to be manually configured.</p> <p>Double-clicking on the converted <code>material.json</code> file opens the <code>HSR Material Viewer</code>, which makes it easier to browse the contents of the <code>material.json</code> file.</p> <p>HSR Material Viewer</p> Tool Extension <p>After importing the <code>HSR.NPRShader.Editor.Automation</code> namespace, declare a class with a parameterless constructor derived from <code>BaseMaterialSetter</code>.</p> <p>The following members can be overridden:</p> Member Type Name Description Property <code>Order</code> Priority. The smaller the number, the higher the priority. Property <code>SupportedShaderMap</code> Shader map supported by this class. Key is the Shader name in the game, and Value is the converted Shader name in the project. Method <code>ApplyTextures</code> The parameters passed in are the Texture information in the <code>material.json</code> file, and the methods return a list of Textures to be set on the Material. Method <code>ApplyInts</code> The parameters passed in are the Int information in the <code>material.json</code> file, and the methods return a list of Ints to be set on the Material. Method <code>ApplyFloats</code> The parameters passed in are the Float information in the <code>material.json</code> file, and the methods return a list of Floats to be set on the Material. Method <code>ApplyColors</code> The parameters passed in are the Color information in the <code>material.json</code> file, and the methods return a list of Colors to be set on the Material. Example<pre><code>public class FaceMaterialSetter : BaseMaterialSetter\n{\n    protected override IReadOnlyDictionary&lt;string, string&gt; SupportedShaderMap =&gt; new Dictionary&lt;string, string&gt;()\n    {\n        [\"miHoYo/CRP_Character/CharacterFace\"] = \"Honkai Star Rail/Character/Face\"\n    };\n\n    protected override IEnumerable&lt;(string, TextureJsonData)&gt; ApplyTextures(IReadOnlyDictionary&lt;string, TextureJsonData&gt; textures)\n    {\n        yield return (\"_MainTex\", textures[\"_MainTex\"]);\n        yield return (\"_FaceMap\", textures[\"_FaceMap\"]);\n        yield return (\"_ExpressionMap\", textures[\"_FaceExpression\"]);\n    }\n\n    protected override IEnumerable&lt;(string, float)&gt; ApplyFloats(IReadOnlyDictionary&lt;string, float&gt; floats)\n    {\n        if (floats.TryGetValue(\"_UseUVChannel2\", out float useUV2))\n        {\n            yield return (\"_FaceMapUV2\", useUV2);\n        }\n\n        yield return (\"_EmissionThreshold\", floats[\"_EmissionThreshold\"]);\n        yield return (\"_EmissionIntensity\", floats[\"_EmissionIntensity\"]);\n\n        yield return (\"_NoseLinePower\", floats[\"_NoseLinePower\"]);\n\n        yield return (\"_mmBloomIntensity0\", floats[\"_mBloomIntensity0\"]);\n    }\n\n    protected override IEnumerable&lt;(string, Color)&gt; ApplyColors(IReadOnlyDictionary&lt;string, Color&gt; colors)\n    {\n        yield return (\"_Color\", colors[\"_Color\"]);\n        yield return (\"_ShadowColor\", colors[\"_ShadowColor\"]);\n        yield return (\"_EyeShadowColor\", colors[\"_EyeShadowColor\"]);\n        yield return (\"_EmissionColor\", Color.white);\n        yield return (\"_OutlineColor0\", colors[\"_OutlineColor\"]);\n        yield return (\"_NoseLineColor\", colors[\"_NoseLineColor\"]);\n\n        // Texture Scale Offset\n        yield return (\"_Maps_ST\", colors[\"_MainMaps_ST\"]);\n\n        // Expression\n        yield return (\"_ExCheekColor\", colors[\"_ExCheekColor\"]);\n        yield return (\"_ExShyColor\", colors[\"_ExShyColor\"]);\n        yield return (\"_ExShadowColor\", colors[\"_ExShadowColor\"]);\n        yield return (\"_ExEyeColor\", colors[\"_ExEyeColor\"]);\n    }\n}\n</code></pre>"},{"location":"character/rendering-controller/","title":"Rendering Controller","text":"<p>The <code>StarRail Character Rendering Controller</code> component is automatically added to the root object of the character.</p> <p>Character Rendering Controller</p>"},{"location":"character/rendering-controller/#Controlling-Rendering","title":"Controlling Rendering","text":"<p>You can control some rendering effects by modifying the parameters in the inspector.</p>"},{"location":"character/rendering-controller/#Synchronizing-MMD-Models-Head-Bone","title":"Synchronizing MMD Model's Head Bone","text":"<p>If you are using MMD models, you need to drag the <code>Transform</code> of the head bone to the <code>Head Bone</code> field.</p> <p>Synchronizing Head Bone</p>"},{"location":"character/rendering-controller/#C-API","title":"C# API","text":"Member Type Name Description Property <code>RampCoolWarmMix</code> Blend level of the cool and warm Ramp textures. 0 is cool, 1 is warm. Range <code>[0, 1]</code>. Property <code>DitherAlpha</code> Transparency of the character. Range <code>[0, 1]</code>. Property <code>ExpressionCheekIntensity</code> Degree of cheek blush. Range <code>[0, 1]</code>. Property <code>ExpressionShyIntensity</code> Shyness level. Range <code>[0, 1]</code>. Property <code>ExpressionShadowIntensity</code> Darkening of the face. Range <code>[0, 1]</code>. Property <code>IsCastingShadow</code> Whether to cast shadows. Method <code>UpdateRendererList</code> Update the internal cached list of <code>Renderer</code> in the controller."},{"location":"character/rendering-controller/#SRP-Batcher","title":"SRP Batcher","text":"<ul> <li>In Editor, this component uses <code>MaterialPropertyBlock</code>, which does not support the SRP Batcher.</li> <li>After Build, this component uses <code>Renderer.material</code>, which supports the SRP Batcher.</li> </ul>"},{"location":"zh/","title":"StarRail NPR Shader \u6587\u6863","text":"<p>\u613f\u6b64\u884c\uff0c\u7ec8\u62b5\u7fa4\u661f</p> <p>\u57fa\u4e8e Unity URP \u7684\u4eff\u661f\u7a79\u94c1\u9053\u6e32\u67d3 Shader\u3002</p>"},{"location":"zh/#\u6838\u5fc3\u7279\u70b9","title":"\u6838\u5fc3\u7279\u70b9","text":"<ul> <li>\u652f\u6301\u89e3\u5305\u6a21\u578b\u548c MMD \u6a21\u578b\u3002</li> <li>\u652f\u6301 Forward \u548c Forward+ \u6e32\u67d3\u8def\u5f84\u3002</li> <li>\u652f\u6301\u534a\u900f\u660e\u5218\u6d77\u3002</li> <li>\u652f\u6301\u81ea\u9634\u5f71\u548c\u9010\u7269\u4f53\u9634\u5f71\uff0c\u540c\u5c4f\u6700\u591a 16 \u4e2a\u3002</li> <li>\u5b9a\u5236\u7684 Bloom \u548c Tonemapping\u3002</li> <li>\u5b9a\u5236\u7684\u6750\u8d28\u7f16\u8f91\u5668\u3002</li> <li>\u81ea\u52a8\u5316\u6d41\u7a0b\uff08\u5e73\u6ed1\u6a21\u578b\u6cd5\u7ebf\u3001\u8bbe\u7f6e\u8d34\u56fe\u3001\u751f\u6210\u6750\u8d28\u3001\u6784\u5efa\uff09\uff0c\u96c6\u6210 Unity Preset \u7cfb\u7edf\u3002</li> <li>\u5728 Windows \u548c Android \u4e0a\u7ecf\u8fc7\u9a8c\u8bc1\u3002</li> </ul>"},{"location":"zh/#\u8d5e\u52a9","title":"\u8d5e\u52a9","text":"<p>\u5982\u679c\u4f60\u559c\u6b22\u8fd9\u4e2a\u9879\u76ee\uff0c\u53ef\u4ee5\u8d5e\u52a9\u6d41\u8424  \u4e00\u4efd\u6a61\u6728\u86cb\u7cd5\u5377\u557e\uff01\u94fe\u63a5\uff1ahttps://stalomeow.com/#coffee\u3002</p>"},{"location":"zh/#\u7279\u522b\u611f\u8c22","title":"\u7279\u522b\u611f\u8c22","text":"<ul> <li>miHoYo / HoYoverse</li> <li>Razmoth</li> <li>m4urlcl0</li> <li>\u00b0Nya\u00b0222</li> </ul>"},{"location":"zh/installation/","title":"\u5b89\u88c5","text":""},{"location":"zh/installation/#\u8981\u6c42","title":"\u8981\u6c42","text":"<ul> <li>Unity &gt;= 2022.3.20</li> <li>Core RP Library &gt;= 14.0.10</li> <li>Universal RP &gt;= 14.0.10</li> </ul> <p>\u7531\u4e8e\u4e00\u4e9b API \u7ecf\u5e38\u53d1\u751f\u53d8\u5316\uff0c\u5efa\u8bae\u522b\u7528\u592a\u9ad8\u7684\u7248\u672c\u3002\u5982\u679c\u5b89\u88c5\u540e\u6709\u62a5\u9519\uff0c\u5c31\u662f\u7248\u672c\u4e0d\u5408\u9002\u3002</p>"},{"location":"zh/installation/#\u4ece-git-URL-\u5b89\u88c5","title":"\u4ece git URL \u5b89\u88c5","text":"<ol> <li> <p>\u5728 Package Manager \u7684\u6dfb\u52a0\u83dc\u5355\u4e2d\u9009\u62e9 <code>Add package from git URL...</code>\u3002</p> <p>\u5b89\u88c5</p> </li> <li> <p>\u5728\u6587\u672c\u6846\u4e2d\u8f93\u5165\uff1a</p> <pre><code>https://github.com/stalomeow/StarRailNPRShader.git\n</code></pre> </li> <li> <p>\u9009\u62e9 <code>Add</code>\u3002</p> </li> </ol>"},{"location":"zh/installation/#\u6e32\u67d3\u7ba1\u7ebf\u8bbe\u7f6e","title":"\u6e32\u67d3\u7ba1\u7ebf\u8bbe\u7f6e","text":"<ul> <li> <p>\u5728 Universal Renderer \u4e0a\u6dfb\u52a0 <code>Honkai Star Rail</code> Renderer Feature\u3002\u5b83\u5185\u7f6e\u4e86\u5c4f\u5e55\u7a7a\u95f4\u9634\u5f71\uff0c\u6240\u4ee5\u63a5\u4e0b\u6765\u8981\u628a URP \u7684 <code>ScreenSpaceShadows</code> Renderer Feature \u90fd\u79fb\u9664\u6389\u3002</p> <p>Renderer Feature</p> </li> <li> <p>\u4f7f\u7528 Linear Color Space\u3002</p> <p>Linear Color Space</p> </li> <li> <p>\u4f7f\u7528 Forward \u6216 Forward+ \u6e32\u67d3\u8def\u5f84\uff0c\u5e76\u5173\u95ed Depth Priming\u3002</p> <p>\u6e32\u67d3\u8def\u5f84</p> </li> <li> <p>\u63a8\u8350\u6253\u5f00 HDR\u3002</p> <p>HDR</p> </li> </ul>"},{"location":"zh/installation/#\u540e\u5904\u7406\u8bbe\u7f6e","title":"\u540e\u5904\u7406\u8bbe\u7f6e","text":"<p>\u540e\u5904\u7406\u5f88\u91cd\u8981\uff0c\u8bf7\u52a1\u5fc5\u52a0\u4e0a\u5b83\u3002</p> <p>\u540e\u5904\u7406\u8bbe\u7f6e</p>"},{"location":"zh/advanced/rendering-flowchart/","title":"\u6e32\u67d3\u6d41\u7a0b\u56fe","text":"<pre><code>flowchart TD\n    URPShadowCaster[URP ShadowCaster] --&gt; StarRail1\n\n    subgraph StarRail1[Honkai Star Rail]\n        PerObjShadowCaster([MainLight Per-Object ShadowCaster])\n    end\n\n    StarRail1 --&gt; URPDepthPrepass[URP DepthPrepass]\n    URPDepthPrepass --&gt; StarRail2\n\n    subgraph StarRail2[Honkai Star Rail]\n        HairDepthPrepass([Hair DepthPrepass]) --&gt; EnableScreenSpaceShadow([Enable ScreenSpaceShadow])\n    end\n\n    StarRail2 --&gt; URPOpaque[URP Opaque]\n    URPOpaque --&gt; StarRail3\n\n    subgraph StarRail3[Honkai Star Rail]\n        DisableScreenSpaceShadow([Disable ScreenSpaceShadow]) --&gt; SROpaque([Opaque &amp; Outline])\n    end\n\n    StarRail3 --&gt; URPSkyboxTrans[URP Skybox &amp; Transparent]\n    URPSkyboxTrans --&gt; StarRail4\n\n    subgraph StarRail4[Honkai Star Rail]\n        SRTransparent([Transparent &amp; Outline]) --&gt; SRPost([Bloom &amp; Tonemapping])\n    end\n\n    StarRail4 --&gt; URPPost[URP PostProcess]</code></pre> <p>\u4f7f\u7528\u666e\u901a URP Shader \u7684\u900f\u660e\u7269\u4f53\u548c\u89d2\u8272\u8eab\u4e0a\u7684\u900f\u660e\u7269\u4f53\u88ab\u5206\u6210\u4e86\u4e24\u6279\u6e32\u67d3\uff0c\u53ef\u80fd\u4f1a\u51fa\u95ee\u9898\u3002</p>"},{"location":"zh/advanced/sampling-character-shadow/","title":"\u91c7\u6837\u89d2\u8272\u9634\u5f71","text":""},{"location":"zh/advanced/sampling-character-shadow/#\u4f7f\u7528\u5c4f\u5e55\u7a7a\u95f4\u9634\u5f71","title":"\u4f7f\u7528\u5c4f\u5e55\u7a7a\u95f4\u9634\u5f71","text":"<p>\u89d2\u8272\u7684\u9010\u7269\u4f53\u9634\u5f71\u548c Unity \u5185\u7f6e\u7684\u9634\u5f71\u4f1a\u88ab\u5408\u5e76\u5230\u4e00\u5f20\u5c4f\u5e55\u7a7a\u95f4\u9634\u5f71\u56fe\u4e0a\u3002</p> <p>\u6839\u636e\u524d\u9762\u7684\u6e32\u67d3\u6d41\u7a0b\u56fe\uff0c\u5982\u679c\u4f60\u7684\u6750\u8d28\u5728 <code>URP Opaque</code> \u9636\u6bb5\u88ab\u6e32\u67d3\uff0c\u53ea\u9700\u8981\u7ed9\u5b83\u52a0\u4e0a <code>_MAIN_LIGHT_SHADOWS_SCREEN</code> Keyword\uff0c\u7136\u540e\u7528 URP \u9ed8\u8ba4\u65b9\u6cd5\u91c7\u6837\u4e3b\u5149\u6e90\u9634\u5f71\u5373\u53ef\u3002</p>"},{"location":"zh/advanced/sampling-character-shadow/#\u624b\u52a8\u91c7\u6837","title":"\u624b\u52a8\u91c7\u6837","text":"<p>\u5bf9\u4e8e\u5176\u4ed6\u9636\u6bb5\u88ab\u6e32\u67d3\u7684\u6750\u8d28\uff0c\u4ee5\u53ca\u4e0d\u652f\u6301\u5c4f\u5e55\u7a7a\u95f4\u9634\u5f71\u7684\u900f\u660e\u6750\u8d28\uff0c\u53ef\u4ee5\u624b\u52a8\u91c7\u6837\u89d2\u8272\u9634\u5f71\u3002</p> <p>\u5f00\u542f\u8f6f\u9634\u5f71\u3002</p> <pre><code>#pragma multi_compile_fragment _ _SHADOWS_SOFT\n</code></pre> <p>\u5f15\u5165\u6587\u4ef6\u3002</p> <pre><code>#include \"Packages/com.stalomeow.star-rail-npr-shader/Shaders/Shadow/PerObjectShadow.hlsl\"\n</code></pre> <p>\u4f7f\u7528\u4e16\u754c\u7a7a\u95f4\u5750\u6807\u91c7\u6837\u6240\u6709\u89d2\u8272\u9634\u5f71\u3002</p> <pre><code>float shadow = MainLightPerObjectSceneShadow(positionWS);\n</code></pre>"},{"location":"zh/advanced/stencil-value/","title":"\u6a21\u677f\u503c","text":"<p>\u672c\u9879\u76ee\u4f7f\u7528\u4e86\u4f4e 3 \u4f4d\u3002</p> \u6a21\u677f\u503c \u63cf\u8ff0 <code>0b_0000_0001</code> \u89d2\u8272 <code>0b_0000_0010</code> \u773c\u775b <code>0b_0000_0100</code> \u900f\u660e\u7269\u4f53 <p>\u4e0a\u9762\u51e0\u4e2a\u503c\u662f\u7ec4\u5408\u4f7f\u7528\u7684\u3002\u4f8b\u5982\uff0c\u89d2\u8272\u7684\u773c\u775b\u5bf9\u5e94 <code>0b_0000_0011</code>\u3002</p>"},{"location":"zh/character/asset/","title":"\u8d44\u4ea7","text":""},{"location":"zh/character/asset/#\u83b7\u53d6\u8d44\u4ea7","title":"\u83b7\u53d6\u8d44\u4ea7","text":"<p>\u4f7f\u7528\u8fd9\u5957 Shader \u9700\u8981\u8f83\u591a\u89e3\u5305\u8d44\u4ea7\uff0c\u8bf7\u81ea\u884c\u83b7\u53d6\u3002\u672c\u9879\u76ee\u4e0d\u63d0\u4f9b\u8d44\u4ea7\uff0c\u4e5f\u4e0d\u63d0\u4f9b\u5de5\u5177\u548c\u6559\u7a0b\u5e2e\u52a9\u4f60\u83b7\u53d6\u8d44\u4ea7\u3002</p>"},{"location":"zh/character/asset/#\u6a21\u578b\u5927\u5c0f","title":"\u6a21\u578b\u5927\u5c0f","text":"<p>\u6a21\u578b\u5fc5\u987b\u5bfc\u5165\u6210\u6b63\u786e\u7684\u5927\u5c0f\uff0c\u5426\u5219\u6e32\u67d3\u4f1a\u51fa\u9519\u3002</p> \u89e3\u5305\u6a21\u578bMMD \u6a21\u578b <p>\u5f53\u6a21\u578b\u88ab\u5bfc\u5165 Unity \u540e\uff0c\u5c06 <code>Scale Factor</code> \u8bbe\u7f6e\u4e3a <code>1</code> \u5e76\u53d6\u6d88\u52fe\u9009 <code>Convert Units</code>\u3002(1)</p> <ol> <li> <p>\u4ee5 AssetStudio \u4e3a\u4f8b\u3002\u5b83\u4f7f\u7528 FBX SDK \u5bfc\u51fa\u6a21\u578b\uff0c\u4ee3\u7801\u4e2d\u7528 <code>scaleFactor</code> \u8bbe\u7f6e\u5355\u4f4d\uff0c\u9ed8\u8ba4\u662f <code>1cm</code>\u3002</p> <pre><code>FbxGlobalSettings&amp; globalSettings = pScene-&gt;GetGlobalSettings();\nglobalSettings.SetSystemUnit(FbxSystemUnit(scaleFactor));\n</code></pre> <p>\u661f\u7a79\u94c1\u9053\u89d2\u8272\u6a21\u578b\u7684\u5355\u4f4d\u662f <code>1m</code>\uff0c\u6240\u4ee5\uff0c\u5728\u5bfc\u51fa\u6a21\u578b\u524d\uff0c\u9700\u8981\u5728 Export options \u4e2d\u628a <code>ScaleFactor</code> \u6539\u6210 <code>100</code>\u3002\u4f46\u662f\uff0c\u6709\u4e9b\u4eba\u6ca1\u6539\u8fd9\u4e2a\u503c\uff0c\u6216\u8005\u968f\u4fbf\u7ed9\u4e86\u4e00\u4e2a\u503c\uff0c\u5bfc\u81f4 FBX \u5355\u4f4d\u4e0d\u5bf9\u3002</p> <p>FBX Scale Factor</p> </li> </ol> <p>\u6a21\u578b\u5927\u5c0f\u8bbe\u7f6e</p> <p>\u5b98\u65b9 MMD \u6a21\u578b\u662f PMX \u683c\u5f0f\uff0cUnity \u4e0d\u652f\u6301\uff0c\u9700\u8981\u4f7f\u7528\u5176\u4ed6\u5de5\u5177\u5c06\u6a21\u578b\u5bfc\u51fa\u4e3a FBX\u3002\u4e0b\u9762\u4ee5 Blender \u548c blender_mmd_tools \u4e3a\u4f8b\u3002</p> <p>MMD \u6a21\u578b\u7684\u5355\u4f4d\u662f <code>0.08m</code>\uff0cBlender \u7684\u9ed8\u8ba4\u5355\u4f4d\u662f <code>1m</code>\uff0c\u6240\u4ee5\uff0c\u5728\u5bfc\u5165 Blender \u65f6\uff0c\u5c06 <code>Scale</code> \u8bbe\u7f6e\u4e3a <code>0.08</code>\u3002</p> <p>Blender \u5bfc\u5165\u8bbe\u7f6e</p> <p>\u5728\u5bfc\u51fa\u4e3a FBX \u65f6\uff0c\u5c06 <code>Apply Scalings</code> \u6539\u6210 <code>FBX Units Scale</code>\uff0c\u628a\u7f29\u653e\u5e94\u7528\u5230 FBX \u6a21\u578b\u7684\u5355\u4f4d\u4e0a\u3002</p> <p>Blender \u5bfc\u51fa\u8bbe\u7f6e</p> <p>\u5f53\u6a21\u578b\u88ab\u5bfc\u5165 Unity \u540e\uff0c\u4ec0\u4e48\u90fd\u4e0d\u7528\u6539\u3002</p> <p>\u6a21\u578b\u5927\u5c0f\u8bbe\u7f6e</p>"},{"location":"zh/character/asset/#\u5904\u7406\u8d44\u4ea7","title":"\u5904\u7406\u8d44\u4ea7","text":"<p>\u89d2\u8272\u7684\u8d34\u56fe\u548c\u6a21\u578b\u9700\u8981\u88ab\u6b63\u786e\u5730\u8bbe\u7f6e\u540e\u624d\u80fd\u4f7f\u7528\u3002\u8fd9\u4e2a\u5de5\u4f5c\u91cd\u590d\u4e14\u7e41\u7410\uff0c\u6240\u4ee5\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u8d44\u4ea7\u5904\u7406\u5668\u3002\u5728\u5bfc\u5165\u8d44\u4ea7\u540e\uff0c\u5982\u679c\u5b83\u7684\u8def\u5f84\u6ee1\u8db3\u4e00\u5b9a\u8981\u6c42\uff0c\u8d44\u4ea7\u5904\u7406\u5668\u4f1a\u81ea\u52a8\u5c06\u9884\u8bbe\u5e94\u7528\u5230\u8be5\u8d44\u4ea7\u4e0a\uff0c\u4e0d\u9700\u8981\u518d\u624b\u52a8\u8bbe\u7f6e\u3002\u5bf9\u4e8e\u6a21\u578b\uff0c\u8fd8\u80fd\u81ea\u52a8\u5e73\u6ed1\u5b83\u7684\u6cd5\u7ebf\u3002</p> <p>\u9ed8\u8ba4\u7684\u8d34\u56fe\u6587\u4ef6\u540d\u683c\u5f0f\uff1a</p> <ul> <li><code>Avatar_*_Ramp*</code></li> <li><code>Avatar_*_LightMap*</code></li> <li><code>Avatar_*_Color*</code></li> <li><code>Avatar_*_Stockings*</code></li> <li><code>M_*_*_FaceMap*</code> \u6216 <code>W_*_*_FaceMap*</code></li> <li><code>M_*_*_Face_ExpressionMap*</code> \u6216 <code>W_*_*_Face_ExpressionMap*</code></li> </ul> <p>\u9ed8\u8ba4\u7684\u6a21\u578b\u6587\u4ef6\u540d\u683c\u5f0f\uff1a</p> <ul> <li><code>Avatar_*_*.fbx</code> \u6216 <code>Art_*_*.fbx</code></li> </ul> <p>\u9ed8\u8ba4\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002<code>*</code> \u8868\u793a 0 \u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002</p> \u914d\u7f6e\u8d44\u4ea7\u5904\u7406\u5668 <p>\u53ef\u4ee5\u5728 <code>Project Settings/StarRail NPR Shader/HSR Asset Processors</code> \u4e2d\u914d\u7f6e\u8d44\u4ea7\u5904\u7406\u5668\u3002</p> <p>\u8d44\u4ea7\u5904\u7406\u5668</p> <ul> <li> <p><code>Match Mode</code>\uff1a\u8d44\u4ea7\u7684\u5339\u914d\u65b9\u5f0f\u3002</p> <ul> <li> <p><code>Name Glob</code>\uff1a<code>Path Pattern</code> \u4f7f\u7528\u7c7b\u4f3c Unix Glob \u7684\u8bed\u6cd5\uff0c\u5ffd\u7565\u5927\u5c0f\u5199\uff0c\u5339\u914d\u8d44\u4ea7\u7684\u540d\u79f0\uff08\u5305\u542b\u6269\u5c55\u540d\uff09\u3002</p> <ul> <li><code>*</code>\uff1a\u5339\u914d 0 \u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u3002</li> <li><code>?</code>\uff1a\u5339\u914d 1 \u4e2a\u5b57\u7b26\u3002</li> <li><code>|</code>\uff1a\u5206\u5272\u591a\u4e2a Glob\u3002\u4f8b\u5982\uff0c<code>a.* | b.*</code> \u8868\u793a\u5339\u914d <code>a.*</code> \u6216 <code>b.*</code> \u4e2d\u4efb\u610f\u4e00\u4e2a\u3002</li> </ul> </li> <li> <p><code>Regex</code>\uff1a\u5c06 <code>Path Pattern</code> \u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5339\u914d\u8d44\u4ea7\u5b8c\u6574\u8def\u5f84\u3002</p> </li> <li><code>Equals</code>\uff1a\u8d44\u4ea7\u5b8c\u6574\u8def\u5f84\u4e0e <code>Path Pattern</code> \u76f8\u7b49\uff0c\u5219\u5339\u914d\u6210\u529f\u3002</li> <li><code>Contains</code>\uff1a\u8d44\u4ea7\u5b8c\u6574\u8def\u5f84\u5305\u542b <code>Path Pattern</code>\uff0c\u5219\u5339\u914d\u6210\u529f\u3002</li> <li><code>Starts With</code>\uff1a\u8d44\u4ea7\u5b8c\u6574\u8def\u5f84\u4ee5 <code>Path Pattern</code> \u5f00\u5934\uff0c\u5219\u5339\u914d\u6210\u529f\u3002</li> <li><code>Ends With</code>\uff1a\u8d44\u4ea7\u5b8c\u6574\u8def\u5f84\u4ee5 <code>Path Pattern</code> \u7ed3\u5c3e\uff0c\u5219\u5339\u914d\u6210\u529f\u3002</li> </ul> </li> <li> <p><code>Path Pattern</code>\uff1a\u6a21\u5f0f\u5b57\u7b26\u4e32\u3002</p> </li> <li><code>Ignore Case</code>\uff1a\u5339\u914d\u65f6\u662f\u5426\u5ffd\u7565\u5927\u5c0f\u5199\u3002</li> <li><code>Custom Preset</code>\uff1a\u81ea\u5b9a\u4e49\u9884\u8bbe\u3002\u5982\u679c\u4e3a\u7a7a\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u9884\u8bbe\u3002</li> <li><code>Smooth Normal Store Mode</code>\uff1a\u6a21\u578b\u5e73\u6ed1\u6cd5\u7ebf\u7684\u4fdd\u5b58\u65b9\u5f0f\u3002</li> </ul>"},{"location":"zh/character/material/","title":"\u6750\u8d28","text":""},{"location":"zh/character/material/#\u7740\u8272\u5668","title":"\u7740\u8272\u5668","text":"<ul> <li>Honkai Star Rail/Character/Body</li> <li>Honkai Star Rail/Character/Body (Transparent)</li> <li>Honkai Star Rail/Character/EyeShadow</li> <li>Honkai Star Rail/Character/Face</li> <li>Honkai Star Rail/Character/FaceMask</li> <li>Honkai Star Rail/Character/Hair</li> </ul>"},{"location":"zh/character/material/#\u63d0\u793a","title":"\u63d0\u793a","text":"<ul> <li>\u66f4\u6362\u7740\u8272\u5668\u4ee5\u540e\u5efa\u8bae\u91cd\u7f6e\u4e00\u4e0b\u6750\u8d28\u3002</li> <li>\u5982\u679c\u4f7f\u7528 MMD \u6a21\u578b\uff0c\u5728\u6750\u8d28\u6700\u4e0a\u9762\u628a <code>Model Type</code> \u6539\u6210 <code>MMD</code>\u3002MMD \u6a21\u578b\u7f3a\u5c11\u4e00\u4e9b\u7ec6\u8282\u4fe1\u606f\uff0c\u6240\u4ee5\u6e32\u67d3\u51fa\u6765\u4e0d\u5982\u89e3\u5305\u6a21\u578b\u597d\u770b\u3002</li> <li>\u5982\u679c\u51fa\u73b0\u63cf\u8fb9\u95ea\u70c1\u3001\u906e\u6321\u6a21\u578b\u7684\u60c5\u51b5\uff0c\u5728\u6750\u8d28 <code>Outline</code> \u4e2d\u8c03\u6574 <code>Z Offset</code> \u7684\u503c\u3002\u4e00\u822c\u662f <code>-1e-05</code> \u6216\u8005 <code>-1e-04</code> \u8fd9\u6837\u5f88\u5c0f\u7684\u8d1f\u503c\u3002</li> <li>\u5982\u679c\u81ea\u9634\u5f71\u51fa\u73b0\u5947\u602a\u7684\u82b1\u7eb9\uff08Shadow Acne\uff09\uff0c\u5728\u6750\u8d28 <code>Self Shadow Caster</code> \u4e2d\u8c03\u6574 <code>Depth Bias</code> \u548c <code>Normal Bias</code>\u3002\u4e00\u822c\u662f\u548c <code>-0.01</code> \u540c\u6570\u91cf\u7ea7\u7684\u8d1f\u503c\u3002</li> </ul>"},{"location":"zh/character/material/#\u81ea\u52a8\u751f\u6210\u6750\u8d28","title":"\u81ea\u52a8\u751f\u6210\u6750\u8d28","text":"<p>\u524d\u63d0</p> <p>\u4f60\u9700\u8981\u5177\u5907\u5c06\u6e38\u620f\u5185\u6750\u8d28\u5bfc\u51fa\u4e3a JSON \u6587\u4ef6\u7684\u80fd\u529b\u3002\u4e0b\u9762\u5c06\u8fd9\u7c7b\u6587\u4ef6\u7b80\u79f0\u4e3a <code>material.json</code>\u3002</p> <p>\u8be5\u9879\u76ee\u63d0\u4f9b\u4e86\u5de5\u5177\uff0c\u53ef\u4ee5\u6839\u636e <code>material.json</code> \u81ea\u52a8\u751f\u6210\u6750\u8d28\u6216\u8005\u8986\u5199\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6750\u8d28\u3002</p> <p>\u81ea\u52a8\u751f\u6210\u6750\u8d28</p> <p>\u8fd9\u4e2a\u5de5\u5177\u751f\u6210\u7684\u7ed3\u679c\u4ec5\u4f9b\u53c2\u8003\u3002\u4e00\u4e9b\u7ec6\u8282\u7684\u53c2\u6570\uff0c\u6bd4\u5982 <code>BackFaceUseUV2</code> \u7b49\uff0c\u4ecd\u7136\u9700\u8981\u81ea\u5df1\u624b\u52a8\u8bbe\u7f6e\u3002</p> <p>\u53cc\u51fb\u8f6c\u6362\u540e\u7684 <code>material.json</code> \u6587\u4ef6\uff0c\u53ef\u4ee5\u6253\u5f00 <code>HSR Material Viewer</code>\u3002\u5b83\u80fd\u5e2e\u4f60\u66f4\u8f7b\u677e\u5730\u6d4f\u89c8 <code>material.json</code> \u6587\u4ef6\u3002</p> <p>HSR Material Viewer</p> \u5de5\u5177\u6269\u5c55 <p>\u5f15\u5165 <code>HSR.NPRShader.Editor.Automation</code> \u547d\u540d\u7a7a\u95f4\u540e\uff0c\u58f0\u660e\u4e00\u4e2a\u5177\u6709\u65e0\u53c2\u6784\u9020\u65b9\u6cd5\u7684\u7c7b\uff0c\u6d3e\u751f\u81ea <code>BaseMaterialSetter</code>\u3002</p> <p>\u53ef\u91cd\u5199\u7684\u6210\u5458\u5982\u4e0b\uff1a</p> \u6210\u5458\u7c7b\u578b \u540d\u79f0 \u63cf\u8ff0 Property <code>Order</code> \u4f18\u5148\u7ea7\u3002\u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002 Property <code>SupportedShaderMap</code> \u8be5\u7c7b\u652f\u6301\u7684 Shader \u8868\u3002Key \u662f\u6e38\u620f\u91cc\u7684 Shader \u540d\uff0cValue \u662f\u8f6c\u6362\u540e\u7684\u9879\u76ee\u4e2d\u7684 Shader \u540d\u3002 Method <code>ApplyTextures</code> \u4f20\u5165\u7684\u53c2\u6570\u4e3a <code>material.json</code> \u4e2d\u7684 Texture \u4fe1\u606f\uff0c\u8fd4\u56de\u9700\u8981\u8bbe\u7f6e\u5230 Material \u4e0a\u7684 Texture \u5217\u8868\u3002 Method <code>ApplyInts</code> \u4f20\u5165\u7684\u53c2\u6570\u4e3a <code>material.json</code> \u4e2d\u7684 Int \u4fe1\u606f\uff0c\u8fd4\u56de\u9700\u8981\u8bbe\u7f6e\u5230 Material \u4e0a\u7684 Int \u5217\u8868\u3002 Method <code>ApplyFloats</code> \u4f20\u5165\u7684\u53c2\u6570\u4e3a <code>material.json</code> \u4e2d\u7684 Float \u4fe1\u606f\uff0c\u8fd4\u56de\u9700\u8981\u8bbe\u7f6e\u5230 Material \u4e0a\u7684 Float \u5217\u8868\u3002 Method <code>ApplyColors</code> \u4f20\u5165\u7684\u53c2\u6570\u4e3a <code>material.json</code> \u4e2d\u7684 Color \u4fe1\u606f\uff0c\u8fd4\u56de\u9700\u8981\u8bbe\u7f6e\u5230 Material \u4e0a\u7684 Color \u5217\u8868\u3002 \u793a\u4f8b<pre><code>public class FaceMaterialSetter : BaseMaterialSetter\n{\n    protected override IReadOnlyDictionary&lt;string, string&gt; SupportedShaderMap =&gt; new Dictionary&lt;string, string&gt;()\n    {\n        [\"miHoYo/CRP_Character/CharacterFace\"] = \"Honkai Star Rail/Character/Face\"\n    };\n\n    protected override IEnumerable&lt;(string, TextureJsonData)&gt; ApplyTextures(IReadOnlyDictionary&lt;string, TextureJsonData&gt; textures)\n    {\n        yield return (\"_MainTex\", textures[\"_MainTex\"]);\n        yield return (\"_FaceMap\", textures[\"_FaceMap\"]);\n        yield return (\"_ExpressionMap\", textures[\"_FaceExpression\"]);\n    }\n\n    protected override IEnumerable&lt;(string, float)&gt; ApplyFloats(IReadOnlyDictionary&lt;string, float&gt; floats)\n    {\n        if (floats.TryGetValue(\"_UseUVChannel2\", out float useUV2))\n        {\n            yield return (\"_FaceMapUV2\", useUV2);\n        }\n\n        yield return (\"_EmissionThreshold\", floats[\"_EmissionThreshold\"]);\n        yield return (\"_EmissionIntensity\", floats[\"_EmissionIntensity\"]);\n\n        yield return (\"_NoseLinePower\", floats[\"_NoseLinePower\"]);\n\n        yield return (\"_mmBloomIntensity0\", floats[\"_mBloomIntensity0\"]);\n    }\n\n    protected override IEnumerable&lt;(string, Color)&gt; ApplyColors(IReadOnlyDictionary&lt;string, Color&gt; colors)\n    {\n        yield return (\"_Color\", colors[\"_Color\"]);\n        yield return (\"_ShadowColor\", colors[\"_ShadowColor\"]);\n        yield return (\"_EyeShadowColor\", colors[\"_EyeShadowColor\"]);\n        yield return (\"_EmissionColor\", Color.white);\n        yield return (\"_OutlineColor0\", colors[\"_OutlineColor\"]);\n        yield return (\"_NoseLineColor\", colors[\"_NoseLineColor\"]);\n\n        // Texture Scale Offset\n        yield return (\"_Maps_ST\", colors[\"_MainMaps_ST\"]);\n\n        // Expression\n        yield return (\"_ExCheekColor\", colors[\"_ExCheekColor\"]);\n        yield return (\"_ExShyColor\", colors[\"_ExShyColor\"]);\n        yield return (\"_ExShadowColor\", colors[\"_ExShadowColor\"]);\n        yield return (\"_ExEyeColor\", colors[\"_ExEyeColor\"]);\n    }\n}\n</code></pre>"},{"location":"zh/character/rendering-controller/","title":"\u6e32\u67d3\u63a7\u5236\u5668","text":"<p>\u89d2\u8272\u7684\u6839\u7269\u4f53\u4e0a\u4f1a\u81ea\u52a8\u6dfb\u52a0 <code>StarRail Character Rendering Controller</code> \u7ec4\u4ef6\u3002</p> <p>\u89d2\u8272\u6e32\u67d3\u63a7\u5236\u5668</p>"},{"location":"zh/character/rendering-controller/#\u63a7\u5236\u6e32\u67d3","title":"\u63a7\u5236\u6e32\u67d3","text":"<p>\u4fee\u6539\u8be5\u7ec4\u4ef6\u9762\u677f\u4e0a\u7684\u53c2\u6570\u5c31\u80fd\u63a7\u5236\u4e00\u90e8\u5206\u6e32\u67d3\u6548\u679c\u3002</p>"},{"location":"zh/character/rendering-controller/#\u540c\u6b65-MMD-\u6a21\u578b\u7684\u5934\u9aa8\u9abc","title":"\u540c\u6b65 MMD \u6a21\u578b\u7684\u5934\u9aa8\u9abc","text":"<p>\u5982\u679c\u4f7f\u7528 MMD \u6a21\u578b\uff0c\u9700\u8981\u5c06\u5934\u90e8\u9aa8\u9abc\u7684 <code>Transform</code> \u62d6\u7ed9 <code>Head Bone</code> \u5b57\u6bb5\u3002</p> <p>\u540c\u6b65\u5934\u9aa8\u9abc</p>"},{"location":"zh/character/rendering-controller/#C-API","title":"C# API","text":"\u6210\u5458\u7c7b\u578b \u540d\u79f0 \u63cf\u8ff0 Property <code>RampCoolWarmMix</code> \u51b7\u6696 Ramp \u56fe\u7684\u6df7\u5408\u7a0b\u5ea6\u30020 \u662f\u51b7\uff0c1 \u662f\u6696\u3002\u8303\u56f4 <code>[0, 1]</code>\u3002 Property <code>DitherAlpha</code> \u89d2\u8272\u7684\u900f\u660e\u5ea6\u3002\u8303\u56f4 <code>[0, 1]</code>\u3002 Property <code>ExpressionCheekIntensity</code> \u8138\u988a\u6cdb\u7ea2\u7a0b\u5ea6\u3002\u8303\u56f4 <code>[0, 1]</code>\u3002 Property <code>ExpressionShyIntensity</code> \u5bb3\u7f9e\u7a0b\u5ea6\u3002\u8303\u56f4 <code>[0, 1]</code>\u3002 Property <code>ExpressionShadowIntensity</code> \u9ed1\u8138\u7a0b\u5ea6\u3002\u8303\u56f4 <code>[0, 1]</code>\u3002 Property <code>IsCastingShadow</code> \u662f\u5426\u6295\u5c04\u9634\u5f71\u3002 Method <code>UpdateRendererList</code> \u66f4\u65b0\u63a7\u5236\u5668\u5185\u90e8\u7f13\u5b58\u7684 <code>Renderer</code> \u5217\u8868\u3002"},{"location":"zh/character/rendering-controller/#SRP-Batcher","title":"SRP Batcher","text":"<ul> <li>Editor \u4e0b\u4f7f\u7528 <code>MaterialPropertyBlock</code>\uff0c\u4e0d\u652f\u6301 SRP Batcher\u3002</li> <li>Build \u540e\u4f7f\u7528 <code>Renderer.material</code>\uff0c\u652f\u6301 SRP Batcher\u3002</li> </ul>"}]}